{
  "version": 3,
  "sources": ["../../../javascript/atomic_lti/lib/redirect.js", "../../../javascript/atomic_lti/redirect_app.js"],
  "sourcesContent": ["function submitForm() {\n  document.forms[0].submit();\n}\n\nfunction showError() {\n  document.getElementById('error').classList.remove('hidden');\n}\n\nfunction hasCookie(settings) {\n  return document.cookie.match('(^|;)\\\\s*open_id_' + settings.state);\n}\n\nfunction loadCsrf(state, storage_params) {\n  return new Promise((resolve, reject) => {\n    let platformOrigin = new URL(storage_params.oidc_url).origin;\n    let frameName = storage_params.target;\n    let parent = window.parent || window.opener;\n    let targetFrame = frameName === \"_parent\" ? parent : parent.frames[frameName];\n\n    if (storage_params.origin_support_broken) {\n      // The spec requires that the message's target origin be set to the platform's OIDC Authorization url\n      // but Canvas does not yet support this, so we have to use '*'.\n      platformOrigin = '*';\n    }\n\n    let timeout = setTimeout(() => {\n      console.log(\"postMessage timeout\");\n      reject(new Error('Timeout while waiting for platform response'));\n    }, 2000);\n\n    let receiveMessage = (event) => {\n      if (typeof event.data === \"object\" &&\n          event.data.subject === \"lti.get_data.response\" &&\n          event.data.message_id === state &&\n          (event.origin === platformOrigin || platformOrigin === \"*\")) {\n\n        removeEventListener('message', receiveMessage);\n        clearTimeout(timeout);\n\n        if (event.data.error) {\n            // handle errors\n            console.log(event.data.error.code)\n            console.log(event.data.error.message)\n            reject(new Error(event.data.errormessage));\n        }\n        resolve(event.data.value);\n      }\n    };\n    window.addEventListener('message', receiveMessage);\n\n    targetFrame.postMessage({\n            \"subject\": \"lti.get_data\",\n            \"message_id\": state,\n            \"key\": \"atomic_lti_\" + state,\n          } , platformOrigin );\n\n    // Platform will post a message back\n  });\n}\n\nexport async function doLtiRedirect(settings) {\n  if (hasCookie(settings) || !settings.require_csrf) {\n    return submitForm();\n  }\n\n  if (settings.lti_storage_params) {\n    // We have lti postMessage storage\n    try {\n      let csrf_token = await loadCsrf(settings.state, settings.lti_storage_params);\n      document.getElementsByName(\"csrf_token\")[0].value = csrf_token;\n      return submitForm();\n    } catch (e) {\n      console.log(e);\n      showError();\n    }\n  }\n  submitForm();\n}\n", "import { doLtiRedirect } from \"./lib/redirect\"\n\nwindow.onload = async () => doLtiRedirect(window.SETTINGS);\n"],
  "mappings": "MAAA,SAASA,GAAa,CACpB,SAAS,MAAM,CAAC,EAAE,OAAO,CAC3B,CAEA,SAASC,GAAY,CACnB,SAAS,eAAe,OAAO,EAAE,UAAU,OAAO,QAAQ,CAC5D,CAEA,SAASC,EAAUC,EAAU,CAC3B,OAAO,SAAS,OAAO,MAAM,oBAAsBA,EAAS,KAAK,CACnE,CAEA,SAASC,EAASC,EAAOC,EAAgB,CACvC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAIC,EAAiB,IAAI,IAAIH,EAAe,QAAQ,EAAE,OAClDI,EAAYJ,EAAe,OAC3BK,EAAS,OAAO,QAAU,OAAO,OACjCC,EAAcF,IAAc,UAAYC,EAASA,EAAO,OAAOD,CAAS,EAExEJ,EAAe,wBAGjBG,EAAiB,KAGnB,IAAII,EAAU,WAAW,IAAM,CAC7B,QAAQ,IAAI,qBAAqB,EACjCL,EAAO,IAAI,MAAM,6CAA6C,CAAC,CACjE,EAAG,GAAI,EAEHM,EAAkBC,GAAU,CAC1B,OAAOA,EAAM,MAAS,UACtBA,EAAM,KAAK,UAAY,yBACvBA,EAAM,KAAK,aAAeV,IACzBU,EAAM,SAAWN,GAAkBA,IAAmB,OAEzD,oBAAoB,UAAWK,CAAc,EAC7C,aAAaD,CAAO,EAEhBE,EAAM,KAAK,QAEX,QAAQ,IAAIA,EAAM,KAAK,MAAM,IAAI,EACjC,QAAQ,IAAIA,EAAM,KAAK,MAAM,OAAO,EACpCP,EAAO,IAAI,MAAMO,EAAM,KAAK,YAAY,CAAC,GAE7CR,EAAQQ,EAAM,KAAK,KAAK,EAE5B,EACA,OAAO,iBAAiB,UAAWD,CAAc,EAEjDF,EAAY,YAAY,CAChB,QAAW,eACX,WAAcP,EACd,IAAO,cAAgBA,CACzB,EAAII,CAAe,CAG3B,CAAC,CACH,CAEA,eAAsBO,EAAcb,EAAU,CAC5C,GAAID,EAAUC,CAAQ,GAAK,CAACA,EAAS,aACnC,OAAOH,EAAW,EAGpB,GAAIG,EAAS,mBAEX,GAAI,CACF,IAAIc,EAAa,MAAMb,EAASD,EAAS,MAAOA,EAAS,kBAAkB,EAC3E,gBAAS,kBAAkB,YAAY,EAAE,CAAC,EAAE,MAAQc,EAC7CjB,EAAW,CACpB,OAASkB,EAAP,CACA,QAAQ,IAAIA,CAAC,EACbjB,EAAU,CACZ,CAEFD,EAAW,CACb,CC3EA,OAAO,OAAS,SAAYmB,EAAc,OAAO,QAAQ",
  "names": ["submitForm", "showError", "hasCookie", "settings", "loadCsrf", "state", "storage_params", "resolve", "reject", "platformOrigin", "frameName", "parent", "targetFrame", "timeout", "receiveMessage", "event", "doLtiRedirect", "csrf_token", "e", "doLtiRedirect"]
}
